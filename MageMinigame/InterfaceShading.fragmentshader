#version 330 core

// Interpolated values from the vertex shaders
in vec2 UV;
in vec3 Position_worldspace;


// Ouput data
out vec4 color;

// Values that stay constant for the whole mesh.
uniform float Grey; //Set to 1 to turn the texture greyscale
uniform float Red;
uniform float Green;
uniform float Blue;
uniform float Transparency;
uniform sampler2D myTextureSampler_interface;
//uniform mat4 MV;


void main(){
	
	// Material properties
	vec4 MaterialDiffuseColor = texture2D( myTextureSampler_interface, UV ).rgba;
	

		
	color.r=MaterialDiffuseColor.r * Red;
	color.g=MaterialDiffuseColor.g * Green;
	color.b=MaterialDiffuseColor.b * Blue;
	color.a=MaterialDiffuseColor.a * Transparency;	
		
	if(Grey>0.01){
		float avg=(MaterialDiffuseColor.r+MaterialDiffuseColor.g+MaterialDiffuseColor.b)/3.0;
		color.r = color.r * (1 - Grey) + Grey * avg;
		color.g = color.g * (1 - Grey) + Grey * avg;
		color.b = color.b * (1 - Grey) + Grey * avg;		
	}
		
		
	
	

}